- hosts: all
  become: True
  vars:
    remote_ssh_user: "{{ lookup('env', 'USER') }}"
    inventory_file: inventory
  tasks:

  - name: Install dependencies
    yum:
      name: "{{ item }}"
      state: present
    loop:
    - libselinux-python

  - name: Update /etc/hosts on all nodes
    lineinfile:
      path: /etc/hosts
      line: "{{ hostvars[item]['ansible_all_ipv4_addresses'][1] }}  {`{ hostvars[item]['ansible_hostname'] }}"
    with_items: "{{ groups['all'] }}"

  - name: Allow password authentication
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PasswordAuthentication no'
      state: absent
    notify: restart sshd

  - name: Create user on target machine
    user:
      name: "{{ remote_ssh_user }}"
      shell: /bin/bash
      password: $6$BOXTM2HajeTVIc.u$zg.Ot6W1Kb2oUZ2jg/.vdf2T1qkcLRC7CqYJpS0gIKulPW9W3ulSDCMjUG.ZHJo4IZWRGZtTt9glagXaH8TkF0
      state: present

  - name: Copy SSH public key to vagrant user
    authorized_key:
      user: "{{ remote_ssh_user }}"
      state: present
      key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

  - name: Make {{ remote_ssh_user }} admin
    lineinfile:
      path: /etc/sudoers
      line: '{{ remote_ssh_user }} ALL=(ALL) NOPASSWD: ALL'
      backup: yes

  - name: Create local inventory
    delegate_to: localhost
    become: no
    run_once: yes
    file:
      path: "{{ inventory_file }}"
      state: touch
    changed_when: no

  - name: Populate local inventory
    delegate_to: localhost
    run_once: yes
    lineinfile:
      path: "{{ inventory_file }}"
      line: "\n[{{ env }}]"

  - name: Populate local inventory
    delegate_to: localhost
    run_once: yes
    lineinfile:
      path: "{{ inventory_file }}"
      line: "{{ item }}"
    with_items: "{{ groups['all'] }}" 

  handlers:

  - name: restart sshd
    service:
      name: sshd
      state: restarted
